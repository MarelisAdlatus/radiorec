/*
 * Copyright 2024 Marelis Adlatus <software@marelis.cz>.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package cz.marelis.radiorec;

import java.awt.event.KeyEvent;
import javax.swing.JComponent;
import javax.swing.KeyStroke;
import javax.swing.WindowConstants;

/**
 *
 * @author Marelis Adlatus <software@marelis.cz>
 */
public class StationDialog extends javax.swing.JDialog {

    private static final long serialVersionUID = 1L;

    private final Station station;

    private ProgramParseDialog programParseDialog;

    public boolean resultOk = false;

    /**
     * Creates new form StationDialog
     *
     * @param parent
     * @param station
     */
    public StationDialog(java.awt.Frame parent, Station station) {
        super(parent, true);
        this.station = station;
        initComponents();
        setDialog();
    }

    private void setDialog() {
        // Close the dialog after pressing the ESCAPE key
        getRootPane().registerKeyboardAction(e -> {
            setVisible(false);
        }, KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), JComponent.WHEN_IN_FOCUSED_WINDOW);
        // set values
        stationNameTextField.setText(station.props.getProperty(Station.PROP_STATION_NAME));
        stationLinkTextField.setText(station.props.getProperty(Station.PROP_STATION_LINK));
        recordManuallyRadioButton.setActionCommand(Station.RECORD_ADDING_MANUALLY);
        recordStreamRadioButton.setActionCommand(Station.RECORD_ADDING_STREAM);
        recordProgramRadioButton.setActionCommand(Station.RECORD_ADDING_PROGRAM);
        switch (station.props.getProperty(Station.PROP_RECORD_ADDING)) {
            case Station.RECORD_ADDING_MANUALLY ->
                recordButtonGroup.setSelected(recordManuallyRadioButton.getModel(), true);
            case Station.RECORD_ADDING_STREAM ->
                recordButtonGroup.setSelected(recordStreamRadioButton.getModel(), true);
            case Station.RECORD_ADDING_PROGRAM ->
                recordButtonGroup.setSelected(recordProgramRadioButton.getModel(), true);
            default ->
                recordButtonGroup.setSelected(recordManuallyRadioButton.getModel(), true);
        }
    }

    private void getDialog() {
        station.props.setProperty(Station.PROP_STATION_NAME, stationNameTextField.getText());
        station.props.setProperty(Station.PROP_STATION_LINK, stationLinkTextField.getText());
        station.props.setProperty(Station.PROP_RECORD_ADDING, recordButtonGroup.getSelection().getActionCommand());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        recordButtonGroup = new javax.swing.ButtonGroup();
        contentPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        stationNameTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        stationLinkTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        recordManuallyRadioButton = new javax.swing.JRadioButton();
        recordStreamRadioButton = new javax.swing.JRadioButton();
        recordProgramRadioButton = new javax.swing.JRadioButton();
        buttonPanel = new javax.swing.JPanel();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        programSettingsButton = new javax.swing.JButton();

        setTitle("Station");
        setResizable(false);

        contentPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Station name");

        jLabel2.setText("Station Page");

        jLabel6.setText("Adding records");

        recordButtonGroup.add(recordManuallyRadioButton);
        recordManuallyRadioButton.setText("Manually");

        recordButtonGroup.add(recordStreamRadioButton);
        recordStreamRadioButton.setText("From the stream");

        recordButtonGroup.add(recordProgramRadioButton);
        recordProgramRadioButton.setText("From the program");

        javax.swing.GroupLayout contentPanelLayout = new javax.swing.GroupLayout(contentPanel);
        contentPanel.setLayout(contentPanelLayout);
        contentPanelLayout.setHorizontalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(stationLinkTextField)
                    .addComponent(stationNameTextField)
                    .addGroup(contentPanelLayout.createSequentialGroup()
                        .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6)
                            .addGroup(contentPanelLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(recordStreamRadioButton)
                                    .addComponent(recordManuallyRadioButton)
                                    .addComponent(recordProgramRadioButton))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        contentPanelLayout.setVerticalGroup(
            contentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stationNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(stationLinkTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(recordManuallyRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(recordStreamRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(recordProgramRadioButton)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        programSettingsButton.setText("Program Settings");
        programSettingsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                programSettingsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonPanelLayout = new javax.swing.GroupLayout(buttonPanel);
        buttonPanel.setLayout(buttonPanelLayout);
        buttonPanelLayout.setHorizontalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(programSettingsButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 126, Short.MAX_VALUE)
                .addComponent(okButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelButton)
                .addContainerGap())
        );
        buttonPanelLayout.setVerticalGroup(
            buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(buttonPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton)
                    .addComponent(programSettingsButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(contentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(contentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        if (programParseDialog != null) {
            programParseDialog.dispose();
        }
        setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        getDialog();
        if (programParseDialog != null) {
            if (programParseDialog.resultOk) {
                programParseDialog.getDialog();
            }
            programParseDialog.dispose();
        }

        resultOk = true;
        setVisible(false);
    }//GEN-LAST:event_okButtonActionPerformed

    private void programSettingsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_programSettingsButtonActionPerformed
        if (programParseDialog == null) {
            programParseDialog = new ProgramParseDialog(null, station);
            programParseDialog.setModal(true);
            programParseDialog.setAlwaysOnTop(true);
            programParseDialog.setLocationRelativeTo(null);
            programParseDialog.setDefaultCloseOperation(WindowConstants.HIDE_ON_CLOSE);
        }
        programParseDialog.setVisible(true);
    }//GEN-LAST:event_programSettingsButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel contentPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JButton okButton;
    private javax.swing.JButton programSettingsButton;
    private javax.swing.ButtonGroup recordButtonGroup;
    private javax.swing.JRadioButton recordManuallyRadioButton;
    private javax.swing.JRadioButton recordProgramRadioButton;
    private javax.swing.JRadioButton recordStreamRadioButton;
    private javax.swing.JTextField stationLinkTextField;
    private javax.swing.JTextField stationNameTextField;
    // End of variables declaration//GEN-END:variables
}
